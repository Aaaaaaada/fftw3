/* -*- C -*- */
#include <stdlib.h>
#include <spu_intrinsics.h>
#include <spu_mfcio.h>
#include "fftw-spu.h"
#include "../fftw-cell.h"

static void wait(void)
{
     while (spu_stat_in_mbox () < 1);
     (void) spu_read_in_mbox();
}

static void ack(void)
{
     spu_write_out_mbox(0);
}

int main(unsigned long long spu_id, unsigned long long parm)
{  
     static struct spu_context ctx __attribute__ ((aligned (ALIGNMENT)));
     UNUSED(spu_id);
     spu_writech(MFC_WrTagMask, -1);

     for (;;) {
	  wait();

	  /* obtain context */
	  X(spu_dma1d)(&ctx, parm, sizeof(ctx), MFC_GETL_CMD);

	  switch (ctx.op) {
	      case SPE_DFT:
		   X(spu_do_dft)(&ctx.u.dft);
		   break;

	      case SPE_TRANSPOSE:
		   X(spu_do_transpose)(&ctx.u.transpose);
		   break;

	      case SPE_EXIT:
		   return 0;
	  }

	  ack();
     }
}
